// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  headline  String
  isRemoved Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  skills           UserSkill[]
  posts            Post[]
  postLikes        PostLike[]
  postComments     PostComment[]
  postCommentLikes PostCommentLike[]
}

model UserSkill {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User       @relation(fields: [userId], references: [id])
  userId Int
  likes  PostLike[]
}

model PostLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Post @relation(fields: [postId], references: [id])
  postId Int
  User   User @relation(fields: [userId], references: [id])
  userId Int
}

model PostComment {
  id        Int      @id @default(autoincrement())
  comment   String
  isUpdated Boolean  @default(false)
  isRemoved Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User              @relation(fields: [userId], references: [id])
  userId Int
  likes  PostCommentLike[]
}

model PostCommentLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postComment   PostComment @relation(fields: [postCommentId], references: [id])
  postCommentId Int
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
}
